{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fernanda Avelar\\\\Documents\\\\React\\\\dadjokes\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchForm from './SearchForm'; // import { isTemplateElement } from '@babel/types';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      searchTerm: '',\n      jokes: [],\n      isFetchingJoke: false\n    };\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.searchJokes = this.searchJokes.bind(this);\n  }\n\n  searchJokes(limit = 20) {\n    this.setState({\n      isFetchingJoke: true\n    });\n    fetch(\"https://icanhazdadjoke.com/search?term=\".concat(this.state.searchTerm, \"&limit=\").concat(limit), {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json'\n      }\n    }).then(response => response.json()).then(json => {\n      const jokes = json.results;\n      this.setState({\n        jokes,\n        isFetchingJoke: false\n      });\n    });\n  } // componentDidMount(){\n  //   this.searchJokes();\n  // }\n\n\n  onSearchChange(value) {\n    this.setState({\n      searchTerm: value\n    });\n  }\n\n  renderJokes() {\n    return React.createElement(\"ul\", {\n      className: \"jokes-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.jokes.map(item => React.createElement(\"li\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, item.joke)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"logo\",\n      src: \"./google-dad-jokes-logo.png.png\",\n      alt: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(SearchForm, {\n      onFormSubmit: this.searchJokes,\n      onSearchValueChange: this.onSearchChange,\n      isSearching: this.isFetchingJoke,\n      onSingleSearchClick: () => this.searchJokes(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), this.state.isFetchingJoke ? 'Searching  Joke ...' : this.renderJokes());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Fernanda Avelar\\Documents\\React\\dadjokes\\src\\App.js"],"names":["React","SearchForm","App","Component","constructor","state","searchTerm","jokes","isFetchingJoke","onSearchChange","bind","searchJokes","limit","setState","fetch","method","headers","Accept","then","response","json","results","value","renderJokes","map","item","id","joke","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAE;AACX;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAMA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,WAAW,CAACC,KAAK,GAAG,EAAT,EAAY;AACrB,SAAKC,QAAL,CAAc;AACZL,MAAAA,cAAc,EAAC;AADH,KAAd;AAIAM,IAAAA,KAAK,kDAA2C,KAAKT,KAAL,CAAWC,UAAtD,oBAA0EM,KAA1E,GAAmF;AACtFG,MAAAA,MAAM,EAAC,KAD+E;AAEtFC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAF6E,KAAnF,CAAL,CAMCC,IAND,CAMMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANlB,EAOCF,IAPD,CAOME,IAAI,IAAI;AACZ,YAAMb,KAAK,GAAGa,IAAI,CAACC,OAAnB;AACA,WAAKR,QAAL,CAAc;AACZN,QAAAA,KADY;AAEZC,QAAAA,cAAc,EAAE;AAFJ,OAAd;AAID,KAbD;AAcD,GAlC+B,CAoChC;AACA;AACA;;;AAEAC,EAAAA,cAAc,CAACa,KAAD,EAAO;AACnB,SAAKT,QAAL,CAAc;AACZP,MAAAA,UAAU,EAACgB;AADC,KAAd;AAGD;;AAEDC,EAAAA,WAAW,GAAE;AACX,WACA;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,KAAL,CAAWE,KAAX,CAAiBiB,GAAjB,CAAqBC,IAAI,IAAI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACE,IAAxB,CAA7B,CADH,CADA;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAC,iCAA1B;AAA4D,MAAA,GAAG,EAAC,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE,oBAAC,UAAD;AACE,MAAA,YAAY,EAAI,KAAKjB,WADvB;AAEE,MAAA,mBAAmB,EAAI,KAAKF,cAF9B;AAGE,MAAA,WAAW,EAAI,KAAKD,cAHtB;AAIE,MAAA,mBAAmB,EAAI,MAAM,KAAKG,WAAL,CAAiB,CAAjB,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAYG,KAAKN,KAAL,CAAWG,cAAX,GAA4B,qBAA5B,GAAoD,KAAKe,WAAL,EAZvD,CADF;AAoBD;;AA3E+B;;AA+ElC,eAAerB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchForm from './SearchForm'\n// import { isTemplateElement } from '@babel/types';\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      searchTerm: '',\n      jokes: [], \n      isFetchingJoke: false\n    }\n\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.searchJokes = this.searchJokes.bind(this);\n  }\n\n  searchJokes(limit = 20){\n    this.setState({\n      isFetchingJoke:true\n    });\n\n    fetch(`https://icanhazdadjoke.com/search?term=${this.state.searchTerm}&limit=${limit}`, {\n      method:'GET',\n      headers: {\n        Accept: 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then(json => {\n      const jokes = json.results;\n      this.setState({\n        jokes,\n        isFetchingJoke: false\n      });\n    })\n  }\n\n  // componentDidMount(){\n  //   this.searchJokes();\n  // }\n\n  onSearchChange(value){\n    this.setState({\n      searchTerm:value\n    })\n  }\n\n  renderJokes(){\n    return(\n    <ul className=\"jokes-list\">\n      {this.state.jokes.map(item => <li key={item.id}>{item.joke}</li>)}\n    </ul>\n    );\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n\n        <img className=\"logo\" src='./google-dad-jokes-logo.png.png' alt=\"img\" />\n\n        <SearchForm\n          onFormSubmit = {this.searchJokes}\n          onSearchValueChange = {this.onSearchChange}\n          isSearching = {this.isFetchingJoke}\n          onSingleSearchClick = {() => this.searchJokes(1)}\n        />\n        \n      \n        {this.state.isFetchingJoke ? 'Searching  Joke ...' : this.renderJokes()}\n        \n\n        {/* <p> isFetchingJoke: {this.state.isFetchingJoke.toString()}</p> */}\n        {/* <p>searchTerm: {this.state.searchTerm}</p> */}\n      </div>\n    )\n  };\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}